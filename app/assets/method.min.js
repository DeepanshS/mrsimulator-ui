var activateMethodTools=function(){const e=document.querySelectorAll("[data-table-header-mth] li");e.forEach((e,t)=>{e.addEventListener("click",()=>{0==t&&document.getElementById("add-method-button").click(),1==t&&document.getElementById("duplicate-method-button").click(),2==t&&document.getElementById("remove-method-button").click()})})},updateMethod=function(){let e={};return e.data=window.method.updateFields(),e.index=window.method.getIndex(),e.operation="modify",e},addMethod=function(e,t){let n={};return n.data=e.method,n.index=t,n.operation="add",n.time=Date.now(),e=t=null,n},copyMethod=function(e,t){let n={};return checkForEmptyListBeforeOperation("copy","method",t),n.data=e.methods[window.method.getIndex()],n.index=t,n.operation="duplicate",e=t=null,n},delMethod=function(e){let t={};checkForEmptyListBeforeOperation("delete","method",e);var n=window.method.getIndex();return t.data=Date.now(),t.index=n,t.operation="delete",n4=e=null,t},_updateMethodJson=function(){var e=ctxTriggerID()[0].split(".")[0].split("-")[0],t=ctxTriggerStates()["add-method-from-template.data"],n=storeData.data,o=n.methods.length;return"apply"===e?updateMethod():"add"===e?addMethod(t,o):"duplicate"===e?copyMethod(n,o):"remove"===e?delMethod(o):null},_onMethodsLoad=function(){var e=document.querySelectorAll("#method-read-only div.scrollable-list ul li"),t=document.querySelectorAll("[data-edit-mth]");activatePencilButton(t,"view-methods"),t=document.querySelectorAll("[data-table-mth] thead"),activateHomeTableElements(t,e);t=document.getElementById("met-slide");toggleClassNamesForSmallerScreens(t,e.length),updateListEventListener(e,window.method.onClick);let n=window.method.getIndex();return n=n>=e.length?0:n,window.method.select(e,n),null},_setFields=function(e){let n=storeData.data.methods[e],t,o,a;if(document.getElementById("method-title").innerHTML=n.name,null!=n.experiment){let e=n.experiment.csdm.dependent_variables[0].application;null==e&&(e={}),null==e["com.github.DeepanshS.mrsimulator"]&&(e["com.github.DeepanshS.mrsimulator"]={sigma:1});let t=e["com.github.DeepanshS.mrsimulator"].sigma;1!=document.getElementById("measurement-sigma").value&&(t=document.getElementById("measurement-sigma").value),setValue("measurement-sigma",t)}for(a=parseQuantityValue(n.magnetic_flux_density),setValue("magnetic_flux_density",a),a=parseQuantityValue(n.rotor_frequency)/1e3,setValue("rotor_frequency",a),a=rad_to_deg(parseQuantityValue(n.rotor_angle)),setValue("rotor_angle",a),o=0;o<n.spectral_dimensions.length;o++)t=n.spectral_dimensions[o],setValue(`count-${o}`,t.count),a=parseQuantityValue(t.spectral_width)/1e3,setValue(`spectral_width-${o}`,a),a=parseQuantityValue(t.reference_offset)/1e3,setValue(`reference_offset-${o}`,a),setValue(`label-${o}`,t.label);let l,d=n.spectral_dimensions.length;for(o=0;o<2;o++)l=document.getElementById(`dim-${o}-feature-collapse`),o<d?l.classList.add("show"):l.classList.remove("show");n=t=null};window.dash_clientside.method={updateMethodJson:_updateMethodJson,onMethodsLoad:_onMethodsLoad,export_simulation_from_selected_method:function(e,t){if(null===e)return alert("No method found. Try adding a method first."),"";if(null===t)return alert("No simulation data available for the method."),"";e="data:text/json;charset=utf-8,";e+=encodeURIComponent(JSON.stringify(t));let n=document.getElementById("export-simulation-from-method-link");return n.setAttribute("href",e),n.setAttribute("download","simulation.csdf"),n.click(),e=ndlAnchorElem=null,""}};var decodeFromBase64=function(e){let t=atob(e);e=new ArrayBuffer(t.length);let n=new Uint8Array(e);for(let e=0;e<t.length;e++)n[e]=t.charCodeAt(e);return new Float64Array(e)};function searchMethods(){let e,t,n,o,a,l,d,i,r;for(e=document.getElementById("search-method"),t=e.value.toUpperCase(),n=document.querySelectorAll("#method-read-only div.scrollable-list ul li"),o=0;o<n.length;o++)for(l=n[o].getElementsByTagName("div"),d=n[o].getElementsByTagName("b"),i=[...l,...d],a=0;a<i.length;a++){if(r=i[a].textContent||i[a].innerText,-1<r.toUpperCase().indexOf(t)){n[o].style.display="";break}n[o].style.display="none"}e=t=n=o=a=l=d=i=r=null}window.method||(window.method={}),window.method={getIndex:function(){return storeData.method_index},setIndex:function(e){storeData.method_index=e},select:function(e,t){0<e.length&&e[t].click()},onClick:function(e){window.method.setIndex(e),window.method.setFields(e);let t=document.querySelectorAll("[data-table-mth] thead");t.forEach(e=>{e.classList.remove("active")}),t[e+1].classList.add("active")},setFields:_setFields,updateFields:function(){let e,t,n,o=storeData.data.methods[window.method.getIndex()];if(null!=o.experiment){n=getValue("measurement-sigma");let e=o.experiment.csdm.dependent_variables[0].application;null==e&&(e={}),null==e["com.github.DeepanshS.mrsimulator"]&&(e["com.github.DeepanshS.mrsimulator"]={}),e["com.github.DeepanshS.mrsimulator"].sigma=n}for(n=getValue("magnetic_flux_density"),o.magnetic_flux_density=toQuantityValue(n,"T"),n=deg_to_rad(getValue("rotor_angle")),o.rotor_angle=toQuantityValue(n,"rad"),n=1e3*getValue("rotor_frequency"),o.rotor_frequency=toQuantityValue(n,"Hz"),t=0;t<o.spectral_dimensions.length;t++)e=o.spectral_dimensions[t],e.count=getValue(`count-${t}`),n=1e3*getValue(`spectral_width-${t}`),e.spectral_width=toQuantityValue(n,"Hz"),n=1e3*getValue(`reference_offset-${t}`),e.reference_offset=toQuantityValue(n,"Hz");return e=t=null,o}};
